#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.269
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServerBase.database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="casree_database")]
	public partial class CASREE_DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertcasree_user(casree_user instance);
    partial void Updatecasree_user(casree_user instance);
    partial void Deletecasree_user(casree_user instance);
    partial void Insertcasree_permission(casree_permission instance);
    partial void Updatecasree_permission(casree_permission instance);
    partial void Deletecasree_permission(casree_permission instance);
    partial void Insertcasree_solutionProgress(casree_solutionProgress instance);
    partial void Updatecasree_solutionProgress(casree_solutionProgress instance);
    partial void Deletecasree_solutionProgress(casree_solutionProgress instance);
    partial void Insertcasree_solution(casree_solution instance);
    partial void Updatecasree_solution(casree_solution instance);
    partial void Deletecasree_solution(casree_solution instance);
    partial void Insertcasree_projectVersion(casree_projectVersion instance);
    partial void Updatecasree_projectVersion(casree_projectVersion instance);
    partial void Deletecasree_projectVersion(casree_projectVersion instance);
    #endregion
		
		public CASREE_DatabaseDataContext() : 
				base(global::ServerBase.Properties.Settings.Default.casree_databaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CASREE_DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CASREE_DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CASREE_DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CASREE_DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<casree_user> casree_users
		{
			get
			{
				return this.GetTable<casree_user>();
			}
		}
		
		public System.Data.Linq.Table<casree_permission> casree_permissions
		{
			get
			{
				return this.GetTable<casree_permission>();
			}
		}
		
		public System.Data.Linq.Table<casree_solutionProgress> casree_solutionProgresses
		{
			get
			{
				return this.GetTable<casree_solutionProgress>();
			}
		}
		
		public System.Data.Linq.Table<casree_solution> casree_solutions
		{
			get
			{
				return this.GetTable<casree_solution>();
			}
		}
		
		public System.Data.Linq.Table<casree_projectVersion> casree_projectVersions
		{
			get
			{
				return this.GetTable<casree_projectVersion>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.casree_user")]
	public partial class casree_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _name;
		
		private string _passwd;
		
		private int _groupId;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpasswdChanging(string value);
    partial void OnpasswdChanged();
    partial void OngroupIdChanging(int value);
    partial void OngroupIdChanged();
    #endregion
		
		public casree_user()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwd", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string passwd
		{
			get
			{
				return this._passwd;
			}
			set
			{
				if ((this._passwd != value))
				{
					this.OnpasswdChanging(value);
					this.SendPropertyChanging();
					this._passwd = value;
					this.SendPropertyChanged("passwd");
					this.OnpasswdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupId", DbType="Int NOT NULL")]
		public int groupId
		{
			get
			{
				return this._groupId;
			}
			set
			{
				if ((this._groupId != value))
				{
					this.OngroupIdChanging(value);
					this.SendPropertyChanging();
					this._groupId = value;
					this.SendPropertyChanged("groupId");
					this.OngroupIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.casree_permission")]
	public partial class casree_permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _name;
		
		private string _solutionName;
		
		private string _projectName;
		
		private EntityRef<casree_permission> _casree_permission2;
		
		private EntityRef<casree_permission> _casree_permission1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsolutionNameChanging(string value);
    partial void OnsolutionNameChanged();
    partial void OnprojectNameChanging(string value);
    partial void OnprojectNameChanged();
    #endregion
		
		public casree_permission()
		{
			this._casree_permission2 = default(EntityRef<casree_permission>);
			this._casree_permission1 = default(EntityRef<casree_permission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					if (this._casree_permission1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solutionName", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string solutionName
		{
			get
			{
				return this._solutionName;
			}
			set
			{
				if ((this._solutionName != value))
				{
					this.OnsolutionNameChanging(value);
					this.SendPropertyChanging();
					this._solutionName = value;
					this.SendPropertyChanged("solutionName");
					this.OnsolutionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectName", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string projectName
		{
			get
			{
				return this._projectName;
			}
			set
			{
				if ((this._projectName != value))
				{
					this.OnprojectNameChanging(value);
					this.SendPropertyChanging();
					this._projectName = value;
					this.SendPropertyChanged("projectName");
					this.OnprojectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="casree_permission_casree_permission", Storage="_casree_permission2", ThisKey="name", OtherKey="name", IsUnique=true, IsForeignKey=false)]
		public casree_permission casree_permission2
		{
			get
			{
				return this._casree_permission2.Entity;
			}
			set
			{
				casree_permission previousValue = this._casree_permission2.Entity;
				if (((previousValue != value) 
							|| (this._casree_permission2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._casree_permission2.Entity = null;
						previousValue.casree_permission1 = null;
					}
					this._casree_permission2.Entity = value;
					if ((value != null))
					{
						value.casree_permission1 = this;
					}
					this.SendPropertyChanged("casree_permission2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="casree_permission_casree_permission", Storage="_casree_permission1", ThisKey="name", OtherKey="name", IsForeignKey=true)]
		public casree_permission casree_permission1
		{
			get
			{
				return this._casree_permission1.Entity;
			}
			set
			{
				casree_permission previousValue = this._casree_permission1.Entity;
				if (((previousValue != value) 
							|| (this._casree_permission1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._casree_permission1.Entity = null;
						previousValue.casree_permission2 = null;
					}
					this._casree_permission1.Entity = value;
					if ((value != null))
					{
						value.casree_permission2 = this;
						this._name = value.name;
					}
					else
					{
						this._name = default(string);
					}
					this.SendPropertyChanged("casree_permission1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.casree_solutionProgress")]
	public partial class casree_solutionProgress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _solutionName;
		
		private int _progress;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsolutionNameChanging(string value);
    partial void OnsolutionNameChanged();
    partial void OnprogressChanging(int value);
    partial void OnprogressChanged();
    #endregion
		
		public casree_solutionProgress()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solutionName", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string solutionName
		{
			get
			{
				return this._solutionName;
			}
			set
			{
				if ((this._solutionName != value))
				{
					this.OnsolutionNameChanging(value);
					this.SendPropertyChanging();
					this._solutionName = value;
					this.SendPropertyChanged("solutionName");
					this.OnsolutionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_progress", DbType="Int NOT NULL")]
		public int progress
		{
			get
			{
				return this._progress;
			}
			set
			{
				if ((this._progress != value))
				{
					this.OnprogressChanging(value);
					this.SendPropertyChanging();
					this._progress = value;
					this.SendPropertyChanged("progress");
					this.OnprogressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.casree_solution")]
	public partial class casree_solution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _solutionName;
		
		private int _predict;
		
		private int _assign;
		
		private int _analysis;
		
		private int _design;
		
		private int _test;
		
		private int _assess;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsolutionNameChanging(string value);
    partial void OnsolutionNameChanged();
    partial void OnpredictChanging(int value);
    partial void OnpredictChanged();
    partial void OnassignChanging(int value);
    partial void OnassignChanged();
    partial void OnanalysisChanging(int value);
    partial void OnanalysisChanged();
    partial void OndesignChanging(int value);
    partial void OndesignChanged();
    partial void OntestChanging(int value);
    partial void OntestChanged();
    partial void OnassessChanging(int value);
    partial void OnassessChanged();
    #endregion
		
		public casree_solution()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solutionName", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string solutionName
		{
			get
			{
				return this._solutionName;
			}
			set
			{
				if ((this._solutionName != value))
				{
					this.OnsolutionNameChanging(value);
					this.SendPropertyChanging();
					this._solutionName = value;
					this.SendPropertyChanged("solutionName");
					this.OnsolutionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_predict", DbType="Int NOT NULL")]
		public int predict
		{
			get
			{
				return this._predict;
			}
			set
			{
				if ((this._predict != value))
				{
					this.OnpredictChanging(value);
					this.SendPropertyChanging();
					this._predict = value;
					this.SendPropertyChanged("predict");
					this.OnpredictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assign", DbType="Int NOT NULL")]
		public int assign
		{
			get
			{
				return this._assign;
			}
			set
			{
				if ((this._assign != value))
				{
					this.OnassignChanging(value);
					this.SendPropertyChanging();
					this._assign = value;
					this.SendPropertyChanged("assign");
					this.OnassignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_analysis", DbType="Int NOT NULL")]
		public int analysis
		{
			get
			{
				return this._analysis;
			}
			set
			{
				if ((this._analysis != value))
				{
					this.OnanalysisChanging(value);
					this.SendPropertyChanging();
					this._analysis = value;
					this.SendPropertyChanged("analysis");
					this.OnanalysisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_design", DbType="Int NOT NULL")]
		public int design
		{
			get
			{
				return this._design;
			}
			set
			{
				if ((this._design != value))
				{
					this.OndesignChanging(value);
					this.SendPropertyChanging();
					this._design = value;
					this.SendPropertyChanged("design");
					this.OndesignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_test", DbType="Int NOT NULL")]
		public int test
		{
			get
			{
				return this._test;
			}
			set
			{
				if ((this._test != value))
				{
					this.OntestChanging(value);
					this.SendPropertyChanging();
					this._test = value;
					this.SendPropertyChanged("test");
					this.OntestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assess", DbType="Int NOT NULL")]
		public int assess
		{
			get
			{
				return this._assess;
			}
			set
			{
				if ((this._assess != value))
				{
					this.OnassessChanging(value);
					this.SendPropertyChanging();
					this._assess = value;
					this.SendPropertyChanged("assess");
					this.OnassessChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.casree_projectVersion")]
	public partial class casree_projectVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _solution_projectName;
		
		private string _version;
		
		private int _id;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsolution_projectNameChanging(string value);
    partial void Onsolution_projectNameChanged();
    partial void OnversionChanging(string value);
    partial void OnversionChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public casree_projectVersion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solution_projectName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string solution_projectName
		{
			get
			{
				return this._solution_projectName;
			}
			set
			{
				if ((this._solution_projectName != value))
				{
					this.Onsolution_projectNameChanging(value);
					this.SendPropertyChanging();
					this._solution_projectName = value;
					this.SendPropertyChanged("solution_projectName");
					this.Onsolution_projectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_version", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string version
		{
			get
			{
				return this._version;
			}
			set
			{
				if ((this._version != value))
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
